

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 08 19:41:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     078D                     __pidataBANK0:
   173                           
   174                           ;initializer for main@F879
   175     078D  343F               	retlw	63
   176     078E  3406               	retlw	6
   177     078F  34DB               	retlw	219
   178     0790  34CF               	retlw	207
   179     0791  3466               	retlw	102
   180     0792  34ED               	retlw	237
   181     0793  34FD               	retlw	253
   182     0794  3407               	retlw	7
   183     0795  34FF               	retlw	255
   184     0796  34EF               	retlw	239
   185     0008                     _PORTD	set	8
   186     0006                     _PORTB	set	6
   187     0086                     _TRISB	set	134
   188     0088                     _TRISD	set	136
   189                           
   190                           	psect	cinit
   191     07EE                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07EE                     __initialization:
   195                           
   196                           ; Initialize objects allocated to BANK0
   197     07EE  1383               	bcf	3,7	;select IRP bank0
   198     07EF  3036               	movlw	low (__pdataBANK0+10)
   199     07F0  00FD               	movwf	btemp+-1
   200     07F1  3007               	movlw	high __pidataBANK0
   201     07F2  00FE               	movwf	btemp
   202     07F3  308D               	movlw	low __pidataBANK0
   203     07F4  00FF               	movwf	btemp+1
   204     07F5  302C               	movlw	low __pdataBANK0
   205     07F6  0084               	movwf	4
   206     07F7  120A  118A  279B  120A  118A  	fcall	init_ram0
   207     07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     07FC                     __end_of__initialization:
   211     07FC  0183               	clrf	3
   212     07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	dataBANK0
   215     002C                     __pdataBANK0:
   216     002C                     main@F879:
   217     002C                     	ds	10
   218                           
   219                           	psect	inittext
   220     0797                     init_fetch0:	
   221                           ;	Called with low address in FSR and high address in W
   222                           
   223     0797  087E               	movf	btemp,w
   224     0798  008A               	movwf	10
   225     0799  087F               	movf	btemp+1,w
   226     079A  0082               	movwf	2
   227     079B                     init_ram0:	
   228                           ;Called with:
   229                           ;	high address of idata address in btemp 
   230                           ;	low address of idata address in btemp+1 
   231                           ;	low address of data in FSR
   232                           ;	high address + 1 of data in btemp-1
   233                           
   234     079B  120A  118A  2797  120A  118A  	fcall	init_fetch0
   235     07A0  0080               	movwf	0
   236     07A1  0A84               	incf	4,f
   237     07A2  0804               	movf	4,w
   238     07A3  067D               	xorwf	btemp+-1,w
   239     07A4  1903               	btfsc	3,2
   240     07A5  3400               	retlw	0
   241     07A6  0AFF               	incf	btemp+1,f
   242     07A7  1903               	btfsc	3,2
   243     07A8  0AFE               	incf	btemp,f
   244     07A9  2F9B               	goto	init_ram0
   245                           
   246                           	psect	cstackCOMMON
   247     0070                     __pcstackCOMMON:
   248     0070                     ?_main:
   249     0070                     ??_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252                           
   253                           ; 1 bytes @ 0x0
   254     0070                     	ds	4
   255                           
   256                           	psect	cstackBANK0
   257     0020                     __pcstackBANK0:
   258     0020                     main@SSD_ARRAY:
   259                           
   260                           ; 10 bytes @ 0x0
   261     0020                     	ds	10
   262     002A                     main@count:
   263                           
   264                           ; 2 bytes @ 0xA
   265     002A                     	ds	2
   266                           
   267                           	psect	maintext
   268     07AA                     __pmaintext:	
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 12 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  SSD_ARRAY      10    0[BANK0 ] unsigned char [10]
   279 ;;  count           2   10[BANK0 ] int 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0      12       0       0       0
   291 ;;      Temps:          4       0       0       0       0
   292 ;;      Totals:         4      12       0       0       0
   293 ;;Total ram usage:       16 bytes
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301     07AA                     _main:	
   302                           ;psect for function _main
   303                           
   304     07AA                     l639:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   307                           
   308                           
   309                           ;main.c: 14:     unsigned char SSD_ARRAY[10] = {0b00111111,0b00000110,0b11011011,
   310     07AA  3020               	movlw	main@SSD_ARRAY& (0+255)
   311     07AB  0084               	movwf	4
   312     07AC  302C               	movlw	low main@F879
   313     07AD  00F0               	movwf	??_main
   314     07AE  0804               	movf	4,w
   315     07AF  00F1               	movwf	??_main+1
   316     07B0  300A               	movlw	10
   317     07B1  00F2               	movwf	??_main+2
   318     07B2                     u50:
   319     07B2  0870               	movf	??_main,w
   320     07B3  0084               	movwf	4
   321     07B4  1383               	bcf	3,7	;select IRP bank0
   322     07B5  0800               	movf	0,w
   323     07B6  00F3               	movwf	??_main+3
   324     07B7  0AF0               	incf	??_main,f
   325     07B8  0871               	movf	??_main+1,w
   326     07B9  0084               	movwf	4
   327     07BA  0873               	movf	??_main+3,w
   328     07BB  0080               	movwf	0
   329     07BC  0AF1               	incf	??_main+1,f
   330     07BD  0BF2               	decfsz	??_main+2,f
   331     07BE  2FB2               	goto	u50
   332     07BF                     l641:
   333                           
   334                           ;main.c: 18:     TRISD = 0xFF;
   335     07BF  30FF               	movlw	255
   336     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   337     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   338     07C2  0088               	movwf	8	;volatile
   339     07C3                     l643:
   340                           
   341                           ;main.c: 19:     TRISB = 0x00;
   342     07C3  0186               	clrf	6	;volatile
   343     07C4                     l645:
   344                           
   345                           ;main.c: 20:     int count = 0;
   346     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   347     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   348     07C6  01AA               	clrf	main@count
   349     07C7  01AB               	clrf	main@count+1
   350     07C8                     l647:
   351                           
   352                           ;main.c: 22:     PORTB = ~(0x00);
   353     07C8  30FF               	movlw	255
   354     07C9  0086               	movwf	6	;volatile
   355     07CA  2FE5               	goto	l659
   356     07CB                     l649:
   357                           
   358                           ;main.c: 26:             PORTB = ~(SSD_ARRAY[count]);
   359     07CB  082A               	movf	main@count,w
   360     07CC  3E20               	addlw	(low (main@SSD_ARRAY| 0))& (0+255)
   361     07CD  0084               	movwf	4
   362     07CE  1383               	bcf	3,7	;select IRP bank0
   363     07CF  0900               	comf	0,w
   364     07D0  0086               	movwf	6	;volatile
   365     07D1                     l651:
   366                           
   367                           ;main.c: 27:             count++;
   368     07D1  3001               	movlw	1
   369     07D2  07AA               	addwf	main@count,f
   370     07D3  1803               	skipnc
   371     07D4  0AAB               	incf	main@count+1,f
   372     07D5  3000               	movlw	0
   373     07D6  07AB               	addwf	main@count+1,f
   374     07D7                     l653:
   375                           
   376                           ;main.c: 28:             if (count == 10){
   377     07D7  300A               	movlw	10
   378     07D8  062A               	xorwf	main@count,w
   379     07D9  042B               	iorwf	main@count+1,w
   380     07DA  1D03               	btfss	3,2
   381     07DB  2FDD               	goto	u61
   382     07DC  2FDE               	goto	u60
   383     07DD                     u61:
   384     07DD  2FE0               	goto	l657
   385     07DE                     u60:
   386     07DE                     l655:
   387                           
   388                           ;main.c: 29:                 count = 0 ;
   389     07DE  01AA               	clrf	main@count
   390     07DF  01AB               	clrf	main@count+1
   391     07E0                     l657:
   392                           
   393                           ;main.c: 31:             while (PORTD == 0x00){
   394     07E0  0808               	movf	8,w	;volatile
   395     07E1  1903               	btfsc	3,2
   396     07E2  2FE4               	goto	u71
   397     07E3  2FE5               	goto	u70
   398     07E4                     u71:
   399     07E4  2FE0               	goto	l657
   400     07E5                     u70:
   401     07E5                     l659:
   402                           
   403                           ;main.c: 25:         while(PORTD == 0x00){
   404     07E5  0808               	movf	8,w	;volatile
   405     07E6  1903               	btfsc	3,2
   406     07E7  2FE9               	goto	u81
   407     07E8  2FEA               	goto	u80
   408     07E9                     u81:
   409     07E9  2FCB               	goto	l649
   410     07EA                     u80:
   411     07EA  2FE5               	goto	l659
   412     07EB  120A  118A  2800   	ljmp	start
   413     07EE                     __end_of_main:
   414     007E                     btemp	set	126	;btemp
   415     007E                     wtemp0	set	126
   416                           
   417                           	psect	idloc
   418                           
   419                           ;Config register IDLOC0 @ 0x2000
   420                           ;	unspecified, using default values
   421     2000                     	org	8192
   422     2000  3FFF               	dw	16383
   423                           
   424                           ;Config register IDLOC1 @ 0x2001
   425                           ;	unspecified, using default values
   426     2001                     	org	8193
   427     2001  3FFF               	dw	16383
   428                           
   429                           ;Config register IDLOC2 @ 0x2002
   430                           ;	unspecified, using default values
   431     2002                     	org	8194
   432     2002  3FFF               	dw	16383
   433                           
   434                           ;Config register IDLOC3 @ 0x2003
   435                           ;	unspecified, using default values
   436     2003                     	org	8195
   437     2003  3FFF               	dw	16383
   438                           
   439                           	psect	config
   440                           
   441                           ;Config register CONFIG @ 0x2007
   442                           ;	Oscillator Selection bits
   443                           ;	FOSC = XT, XT oscillator
   444                           ;	Watchdog Timer Enable bit
   445                           ;	WDTE = OFF, WDT disabled
   446                           ;	Power-up Timer Enable bit
   447                           ;	PWRTE = ON, PWRT enabled
   448                           ;	Brown-out Reset Enable bit
   449                           ;	BOREN = ON, BOR enabled
   450                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   451                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   452                           ;	Data EEPROM Memory Code Protection bit
   453                           ;	CPD = OFF, Data EEPROM code protection off
   454                           ;	Flash Program Memory Write Enable bits
   455                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   456                           ;	In-Circuit Debugger Mode bit
   457                           ;	DEBUG = 0x1, unprogrammed default
   458                           ;	Flash Program Memory Code Protection bit
   459                           ;	CP = OFF, Code protection off
   460     2007                     	org	8199
   461     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      71
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 08 19:41:24 2023

                      pc 0002                       u50 07B2                       u60 07DE  
                     u61 07DD                       u70 07E5                       u71 07E4  
                     u80 07EA                       u81 07E9                       fsr 0004  
                    l641 07BF                      l651 07D1                      l643 07C3  
                    l653 07D7                      l645 07C4                      l655 07DE  
                    l647 07C8                      l639 07AA                      l657 07E0  
                    l649 07CB                      l659 07E5                      fsr0 0004  
                    indf 0000                     _main 07AA                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 078D  
             __pmaintext 07AA     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0797              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020                main@count 002A                 main@F879 002C  
               init_ram0 079B            main@SSD_ARRAY 0020  
