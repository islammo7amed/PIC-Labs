

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Dec 26 15:50:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0059                     _INTF	set	89
   169     005F                     _GIE	set	95
   170     005C                     _INTE	set	92
   171     0041                     _RD1	set	65
   172     0040                     _RD0	set	64
   173     040E                     _INTEDG	set	1038
   174     0441                     _TRISD1	set	1089
   175     0440                     _TRISD0	set	1088
   176     0430                     _TRISB0	set	1072
   177                           
   178                           	psect	cinit
   179     000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182     000F                     __initialization:
   183     000F                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     000F                     __end_of__initialization:
   187     000F  0183               	clrf	3
   188     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_main:
   193     0070                     ?_ISR:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ??_ISR:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201     0070                     	ds	4
   202     0074                     ??_main:
   203                           
   204                           ; 1 bytes @ 0x4
   205     0074                     	ds	3
   206                           
   207                           	psect	maintext
   208     0013                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 13 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0
   230 ;;      Temps:          3       0       0       0       0
   231 ;;      Totals:         3       0       0       0       0
   232 ;;Total ram usage:        3 bytes
   233 ;; Hardware stack levels required when called: 1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241     0013                     _main:	
   242                           ;psect for function _main
   243                           
   244     0013                     l626:	
   245                           ;incstack = 0
   246                           ; Regs used in _main: [wreg]
   247                           
   248                           
   249                           ;main.c: 15:     TRISB0 = 1;
   250     0013  1683               	bsf	3,5	;RP0=1, select bank1
   251     0014  1303               	bcf	3,6	;RP1=0, select bank1
   252     0015  1406               	bsf	6,0	;volatile
   253                           
   254                           ;main.c: 16:     TRISD0 = 0;
   255     0016  1008               	bcf	8,0	;volatile
   256                           
   257                           ;main.c: 17:     TRISD1 = 0;
   258     0017  1088               	bcf	8,1	;volatile
   259                           
   260                           ;main.c: 19:     RD0 = 0;
   261     0018  1283               	bcf	3,5	;RP0=0, select bank0
   262     0019  1303               	bcf	3,6	;RP1=0, select bank0
   263     001A  1008               	bcf	8,0	;volatile
   264                           
   265                           ;main.c: 20:     RD1 = 0;
   266     001B  1088               	bcf	8,1	;volatile
   267                           
   268                           ;main.c: 22:     INTE = 1;
   269     001C  160B               	bsf	11,4	;volatile
   270                           
   271                           ;main.c: 23:     INTEDG = 1;
   272     001D  1683               	bsf	3,5	;RP0=1, select bank1
   273     001E  1303               	bcf	3,6	;RP1=0, select bank1
   274     001F  1701               	bsf	1,6	;volatile
   275                           
   276                           ;main.c: 24:     GIE = 1;
   277     0020  178B               	bsf	11,7	;volatile
   278     0021                     l25:	
   279                           ;main.c: 30:     while (1){
   280                           
   281                           
   282                           ;main.c: 31:         RD1 = 0;
   283     0021  1283               	bcf	3,5	;RP0=0, select bank0
   284     0022  1303               	bcf	3,6	;RP1=0, select bank0
   285     0023  1088               	bcf	8,1	;volatile
   286     0024                     l628:
   287                           
   288                           ;main.c: 32:         _delay((unsigned long)((300)*(4000000/4000.0)));
   289     0024  3002               	movlw	2
   290     0025  00F6               	movwf	??_main+2
   291     0026  3086               	movlw	134
   292     0027  00F5               	movwf	??_main+1
   293     0028  3099               	movlw	153
   294     0029  00F4               	movwf	??_main
   295     002A                     u27:
   296     002A  0BF4               	decfsz	??_main,f
   297     002B  282A               	goto	u27
   298     002C  0BF5               	decfsz	??_main+1,f
   299     002D  282A               	goto	u27
   300     002E  0BF6               	decfsz	??_main+2,f
   301     002F  282A               	goto	u27
   302     0030                     l630:
   303                           
   304                           ;main.c: 33:         RD1 = 1;
   305     0030  1283               	bcf	3,5	;RP0=0, select bank0
   306     0031  1303               	bcf	3,6	;RP1=0, select bank0
   307     0032  1488               	bsf	8,1	;volatile
   308                           
   309                           ;main.c: 34:         _delay((unsigned long)((300)*(4000000/4000.0)));
   310     0033  3002               	movlw	2
   311     0034  00F6               	movwf	??_main+2
   312     0035  3086               	movlw	134
   313     0036  00F5               	movwf	??_main+1
   314     0037  3099               	movlw	153
   315     0038  00F4               	movwf	??_main
   316     0039                     u37:
   317     0039  0BF4               	decfsz	??_main,f
   318     003A  2839               	goto	u37
   319     003B  0BF5               	decfsz	??_main+1,f
   320     003C  2839               	goto	u37
   321     003D  0BF6               	decfsz	??_main+2,f
   322     003E  2839               	goto	u37
   323     003F  2821               	goto	l25
   324     0040  120A  118A  280C   	ljmp	start
   325     0043                     __end_of_main:
   326                           
   327                           	psect	text1
   328     0043                     __ptext1:	
   329 ;; *************** function _ISR *****************
   330 ;; Defined at:
   331 ;;		line 39 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          4       0       0       0       0
   348 ;;      Totals:         4       0       0       0       0
   349 ;;Total ram usage:        4 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		Interrupt level 1
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358     0043                     _ISR:	
   359                           ;psect for function _ISR
   360                           
   361     0043                     i1l632:
   362                           
   363                           ;main.c: 40:     if (INTF == 1){
   364     0043  1C8B               	btfss	11,1	;volatile
   365     0044  2846               	goto	u1_21
   366     0045  2847               	goto	u1_20
   367     0046                     u1_21:
   368     0046  2855               	goto	i1l34
   369     0047                     u1_20:
   370     0047                     i1l634:
   371                           
   372                           ;main.c: 41:         RD0 ^= 1;
   373     0047  1283               	bcf	3,5	;RP0=0, select bank0
   374     0048  1303               	bcf	3,6	;RP1=0, select bank0
   375     0049  3001               	movlw	1
   376     004A  0688               	xorwf	8,f
   377                           
   378                           ;main.c: 42:         _delay((unsigned long)((100)*(4000000/4000.0)));
   379     004B  3082               	movlw	130
   380     004C  00F1               	movwf	??_ISR+1
   381     004D  30DD               	movlw	221
   382     004E  00F0               	movwf	??_ISR
   383     004F                     u4_27:
   384     004F  0BF0               	decfsz	??_ISR,f
   385     0050  284F               	goto	u4_27
   386     0051  0BF1               	decfsz	??_ISR+1,f
   387     0052  284F               	goto	u4_27
   388     0053  2854               	nop2
   389     0054                     i1l636:
   390                           
   391                           ;main.c: 43:         INTF = 0;
   392     0054  108B               	bcf	11,1	;volatile
   393     0055                     i1l34:
   394     0055  0873               	movf	??_ISR+3,w
   395     0056  008A               	movwf	10
   396     0057  0E72               	swapf	??_ISR+2,w
   397     0058  0083               	movwf	3
   398     0059  0EFE               	swapf	btemp,f
   399     005A  0E7E               	swapf	btemp,w
   400     005B  0009               	retfie
   401     005C                     __end_of_ISR:
   402     007E                     btemp	set	126	;btemp
   403     007E                     wtemp0	set	126
   404                           
   405                           	psect	intentry
   406     0004                     __pintentry:	
   407                           ;incstack = 0
   408                           ; Regs used in _ISR: [wreg]
   409                           
   410     0004                     interrupt_function:
   411     007E                     saved_w	set	btemp
   412     0004  00FE               	movwf	btemp
   413     0005  0E03               	swapf	3,w
   414     0006  00F2               	movwf	??_ISR+2
   415     0007  080A               	movf	10,w
   416     0008  00F3               	movwf	??_ISR+3
   417     0009  120A  118A  2843   	ljmp	_ISR
   418                           
   419                           	psect	idloc
   420                           
   421                           ;Config register IDLOC0 @ 0x2000
   422                           ;	unspecified, using default values
   423     2000                     	org	8192
   424     2000  3FFF               	dw	16383
   425                           
   426                           ;Config register IDLOC1 @ 0x2001
   427                           ;	unspecified, using default values
   428     2001                     	org	8193
   429     2001  3FFF               	dw	16383
   430                           
   431                           ;Config register IDLOC2 @ 0x2002
   432                           ;	unspecified, using default values
   433     2002                     	org	8194
   434     2002  3FFF               	dw	16383
   435                           
   436                           ;Config register IDLOC3 @ 0x2003
   437                           ;	unspecified, using default values
   438     2003                     	org	8195
   439     2003  3FFF               	dw	16383
   440                           
   441                           	psect	config
   442                           
   443                           ;Config register CONFIG @ 0x2007
   444                           ;	Oscillator Selection bits
   445                           ;	FOSC = XT, XT oscillator
   446                           ;	Watchdog Timer Enable bit
   447                           ;	WDTE = OFF, WDT disabled
   448                           ;	Power-up Timer Enable bit
   449                           ;	PWRTE = ON, PWRT enabled
   450                           ;	Brown-out Reset Enable bit
   451                           ;	BOREN = ON, BOR enabled
   452                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   453                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   454                           ;	Data EEPROM Memory Code Protection bit
   455                           ;	CPD = OFF, Data EEPROM code protection off
   456                           ;	Flash Program Memory Write Enable bits
   457                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   458                           ;	In-Circuit Debugger Mode bit
   459                           ;	DEBUG = 0x1, unprogrammed default
   460                           ;	Flash Program Memory Code Protection bit
   461                           ;	CP = OFF, Code protection off
   462     2007                     	org	8199
   463     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Dec 26 15:50:13 2023

                     l25 0021                       u27 002A                       u37 0039  
                    l630 0030                      l626 0013                      l628 0024  
                    _GIE 005F                      _RD0 0040                      _RD1 0041  
                    _ISR 0043                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l34 0055                     u1_20 0047  
                   u1_21 0046                     u4_27 004F                     _main 0013  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l632 0043                    i1l634 0047  
                  i1l636 0054                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0043  
                 ??_main 0074                   _INTEDG 040E                   _TRISB0 0430  
                 _TRISD0 0440                   _TRISD1 0441                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 0013  
             __pintentry 0004                  __ptext1 0043     end_of_initialization 000F  
    start_initialization 000F              __end_of_ISR 005C                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
